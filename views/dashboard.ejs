<head>
  <title>Home</title>
  <!-- Load d3.js -->
  <script src="https://d3js.org/d3.v4.js"></script>
  <script src="https://d3js.org/d3-scale-chromatic.v1.min.js"></script>
</head>

<body>
  <h1>Welcome to the dashboard page</h1>

  <h2>Product 1</h2>
  <div id="my_dataviz_1"></div>

  <h2>Product 2</h2>
  <div id="my_dataviz_2"></div>

  <h2>Product 3</h2>
  <div id="my_dataviz_3"></div>

  <% if (ratings) { %>

  <script>
              var ratings = <%- JSON.stringify(ratings) %>;

        // set the dimensions and margins of the graph
        var width = 250
          height = 250
          margin = 40

        // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.
        var radius = Math.min(width, height) / 2 - margin

        for (var el of ['1','2','3']){
        // append the svg object to the div called 'my_dataviz'
        var svg = d3.select("#my_dataviz_"+el)
        .append("svg")
          .attr("width", width)
          .attr("height", height)
        .append("g")
          .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

        var data =ratings[el];

        // set the color scale
        var color = d3.scaleOrdinal()
          .domain(data)
          .range(d3.schemeSet2);

        // Compute the position of each group on the pie:
        var pie = d3.pie()
        .value(function(d) {return d.value; })
        var data_ready = pie(d3.entries(data))


       // shape helper to build arcs:
      var arcGenerator = d3.arc()
        .innerRadius(0)
        .outerRadius(radius)


    // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.
    svg
      .selectAll('mySlices')
      .data(data_ready)
      .enter()
      .append('path')
        .attr('d', arcGenerator)
        .attr('fill', function(d){ return(color(d.data.key)) })
        .attr("stroke", "black")
        .style("stroke-width", "2px")
        .style("opacity", 0.7)

    // Now add the annotation. Use the centroid method to get the best coordinates
    svg
      .selectAll('mySlices')
      .data(data_ready)
      .enter()
      .append('text')
      .text(function(d){  if (d.data.value !=0) {return d.data.key}else{return ""} })
      .attr("transform", function(d) { return "translate(" + arcGenerator.centroid(d) + ")";  })
      .style("text-anchor", "middle")
      .style("font-size", 17)

        }
  </script>

  <% }else { %> <% } %>
</body>
